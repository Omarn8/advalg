package coarsework;

public class Task7 {
	private void heapify(int[] arr, int n, int i) {
	    int smallest = i;
	    int l = 2 * i + 1;
	    int r = 2 * i + 2;
	    if (l < n && arr[l] < arr[smallest])
	        smallest = l;
	    if (r < n && arr[r] < arr[smallest])
	        smallest = r;
	    if (smallest != i) {
	        int temp = arr[i];
	        arr[i] = arr[smallest];
	        arr[smallest] = temp;
	        heapify(arr, n, smallest);
	    }
	}
    public void heapSort(int[] arr) {
        int n = arr.length;
        for (int i = n / 2 - 1; i >= 0; i--)
            heapify(arr, n, i);
        for (int i = n - 1; i >= 0; i--) {
            int temp = arr[0];
            arr[0] = arr[i];
            arr[i] = temp;

            heapify(arr, i, 0);
        }
    }
    public static void main(String[] args) {
        Task7 hs = new Task7();
        int[] arr = {12, 11, 13, 5, 6, 7};
        hs.heapSort(arr);
        System.out.println("Sorted array:");
        for (int i = 0; i < arr.length; ++i) {
            System.out.print(arr[i] + " ");
        }
    }
}
